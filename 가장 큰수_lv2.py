def solution(numbers):
    answer = ''


    # 먼저 30과 3, 39 라는 수가 있다고 가정합니다. 원하는 결과값을 얻기 위해서는 이 수들을 [39, 3, 30] 의 순서로 정렬이 되어야 합니다. 그러나 일반적인 내림차순으로 정렬할 경우에는 [39, 30, 3]의 순서로 정렬이 됩니다.
    # 이 3개의 숫자를 비교하기 위해 자릿수를 맞추어주는 방법을 사용하면 어떻게 될까요? 3개의 수의 자릿수를 100 단위로 맞추어 한번 비교를 해보겠습니다. 자릿수를 맞추게 되면 [390, 300(30), 300(3)] 이 됩니다. 이를 다시 내림차순으로 정렬하더라도 [39, 30, 3] 의 순서로 정렬되므로 결과는 같아지게 됩니다.
    # 그래서 이를 해결하기 위해 사용된 방법으로 위의 리스트의 수를 3번씩 반복하고, 그것을 비교하는 방법입니다.
    # 이 방식으로 비교하게 되면 [393939, 303030, 333]이 되고, 이를 세자리 수까지 끊으면 [393, 303, 333]이 됩니다. 이렇게 되면 [393, 333, 303]순서로 내림차순이 가능해지고, 원래 수로 바꿔주면 [39, 3, 30] 의 순서가 됩니다.
    sort_numbers = sorted(numbers, key=lambda x:str(x)*3, reverse=True)

    # print(sort_numbers)

    answer = ''.join(map(str,sort_numbers))

    # 맨 앞자리가 0일 경우 int() 를 줘서 지운다음에 다시 문자열로 치환
    return str(int(answer))



numbers = [6, 10, 2]
numbers = [3, 30, 34, 5, 9]

print(solution(numbers))